;;; -*- mode: gitconfig; -*-
[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes

[web]
    browser = firefox

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

[rerere]
    enabled = 1
    autoupdate = 1

[alias]

    # Sometimes, you might have done something wrong in git. You think you've lost your commits, or something like that.
    # Chances are, the information is still there--so the best course of action is to make an immediate backup, before you risk actually losing data.
    panic = !tar cvf ../git_panic.tar *

    # https://stackoverflow.com/questions/572549/difference-between-git-add-a-and-git-add
    addall = add -A

    # s = status -sb
    # cl = clone

    # # Commit
    # c = commit -v
    # ca = commit -va
    # cm = commit -vm
    # cam = commit -vam
    # acam = !git add -v . && git commit -vam

    # # See all the commits related to a file
    # filelog = log -u
    # fl = log -u

    # ai = add --interactive
    # a = add . && git status

    # go = checkout -B # Switch to a branch, creating it if necessary
    # co = checkout
    # br = branch -vva
    # fetchall = fetch -v --all

    # # List commits showing changed files is invoked
    # ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    # # Detailed history
    # lll = log --stat --abbrev-commit
    # # List oneline commits showing relative dates
    # ld = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative --graph
    # log-me = !UN=$(git config user.name)&& git log --author="\"$UN\"" --pretty=format:'%h %cd %s' --date=short
    # difflog = log -p --cc --graph --decorate
    # # List all aliases
    # la = "!git config -l | grep alias | cut -c 7-"

    # # Diff
    # diff = diff --word-diff --find-renames --find-copies
    # d = diff --word-diff --find-renames --find-copies
    # ds = diff --staged --find-renames --find-copies
    # dc = diff --cached --find-renames --find-copies
    # # Show content (full diff) of a commit given a revision:
    # lc  = "!f() { git ll "$1"^.."$1"; }; f"
    # dr  = "!f() { git diff -w "$1"^.."$1"; }; f"
    # diffr  = "!f() { git diff "$1"^.."$1"; }; f"

    # # Reset commands
    # unci = reset HEAD^
    # uncommit = reset HEAD^
    # unstage = reset HEAD --
    # r = reset
    # r1 = reset HEAD^
    # r2 = reset HEAD^^
    # rh = reset --hard
    # rh1 = reset HEAD^ --hard
    # rh2 = reset HEAD^^ --hard

    # # Search/grep your entire codebase for a string
    # grep = grep -Ii
    # gr = grep -Ii
    # # Grep from root folder
    # # Find a file path in codebase
    # f = "!git ls-files | grep -i"

    # # Rename branch tree to done-
    # done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
    # # Show the last tag
    # lasttag = describe --tags --abbrev=0
    # lt = describe --tags --abbrev=0
    # # List remotes
    # remotes = remote -v
    # # Total commits
    # total= "!f() { git log -a --pretty=oneline | wc -l | xargs echo "Total commits:";}; f"
    # # Author total commits
    # author = shortlog -sn
    # #Find symbolic names for given revs
    # human = name-rev --name-only --refs=refs/heads/*

    # # Lists what you did in the last 24 hours
    # standup = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cD) %C(bold blue)<%an>%Creset' --since yesterday --author k1-hedayati
    # today = diff @{yesterday}.. --stat
    # # Good web interface
    # web = instaweb
[user]
	name = Keyvan
	email = keyvan42@pm.me
[diff "sopsdiffer"]
	textconv = sops -d
[diff]
	submodule = log
[pull]
	rebase = false
[init]
	defaultBranch = main
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
