# Use auto-indentation.
set autoindent

# Do not create backup files in filename~.
unset backup

# Set the directory where nano puts unique backup files if file backups are enabled.
#set backupdir directory ~/.nanobackups/

# Do not do backwards searches by default.
unset backwards

# Use bold text instead of reverse video text.
set boldtext

#    Set the characters treated as closing brackets when justifying paragraphs. They cannot contain blank characters. Only closing punctuation, optionally followed by closing brackets, can end sentences. The default value is ""')>]}".
set brackets string "\"')>]}"

# Do case sensitive searches by default.
unset casesensitive

# Constantly display the cursor position in the status bar.
set const

# Do not use cut to end of line by default.
unset cut

# Wrap lines at column number n. If n is 0 or less, the maximum line length will be the screen width less n columns. The default value is -8.
#set fill n

# Enable ~/.nano_history for saving and reading search/replace strings.
set historylog

# Set the opening and closing brackets that can be found by bracket searches. They cannot contain blank characters. The former set must come before the latter set, and both must be in the same order. The default value is "(<[{)>]}".
set matchbrackets string "(<[{)>]}"

# Not allow use of the blank line below the titlebar as extra editing space.
unset morespace

# Disable mouse support, if available for your system. When enabled, mouse clicks can be used to place the cursor, set the mark (with a double click), and execute shortcuts. The mouse will work in the X Window System, and on the console when gpm is running.
set mouse

# Allow inserting files into their own buffers.
set multibuffer

# Don't convert files from DOS/Mac format.
set noconvert

# Follow symlinks when writing files.
unset nofollow

# Display the help lists at the bottom of the screen.
unset nohelp

# Add newlines to the ends of files.
#unset nonewlines

# Wrap text at all.
unset nowrap

# nano will only read and write files inside directory and its subdirectories. Also, the current directory is changed to here, so files are inserted from this diractory. By default, the operating directory feature is turned off.
#set operatingdir directory

# Don'tpPreserve the XON and XOFF keys (^Q and ^S).
unset preserve

# Set the characters treated as closing punctuation when justifying paragraphs. They cannot contain blank characters. Only closing punctuation, optionally followed by closing brackets, can end sentences. The default value is "!.?".
#set punct string

# Don't do quick statusbar blanking. Statusbar messages will disappear after 1 keystroke instead of 25.
unset quickblank

# I don't use pico/nano for email, so this doesn't apply to me
# The email-quote string, used to justify email-quoted paragraphs. This is an extended regular expression if your system supports them, otherwise a literal string. The default value is "^([ \t]*[#:>\|}])+" if you have extended regular expression support, or "> " otherwise. Note that '\t' stands for a literal Tab character.
# set quotestr string

# Don'tiInterpret the Delete key differently so that both Backspace and Delete work properly. You should only need to use this option if Backspace acts like Delete on your system.
# unset rebinddelete

# Don't interpret the numeric keypad keys so that they all work properly. You should only need to use this option if they don't, as mouse support won't work properly with this option enabled.
# unset rebindkeypad

# Don't do extended regular expression searches by default.
unset regexp

# Make the Home key smarter. When Home is pressed anywhere but at the very beginning of non-whitespace characters on a line, the cursor will jump to that beginning (either forwards or backwards). If the cursor is already at that position, it will jump to the true beginning of the line.
set smarthome

# Use smooth scrolling by default.
set smooth

# Use spelling checker spellprog instead of the built-in one, which calls spell.
#set speller aspell

# Allow nano to be suspended.
set suspend

# Use a tab size of 3 columns. The value of n must be greater than 0. The default value is 8.
set tabsize 4

# Don't convert typed tabs to spaces.
set tabstospaces

# Don't save automatically on exit, always prompt.
unset tempfile

# Allow file modification.
unset view

#set whitespace string
# Set the two characters used to display the first characters of tabs and spaces. They must be single-column characters.

unset wordbounds
# Do not treat punctuation characters as part of a word.

syntax "HTML" "\.html$"
color blue start="<" end=">"
color red "&[^; ]*;"

syntax "TeX" "\.tex$"
color green "\\.|\\[A-Za-z]*"
color magenta "[{}]"
color blue "%.*"

syntax "patch" "\.(patch|diff)$"
color brightgreen "^\+.*"
color green "^\+\+\+.*"
color brightblue "^ .*"
color brightred "^-.*"
color red "^---.*"
color brightyellow "^@@.*"
color magenta "^diff.*"

syntax "makefile" "^Makefile\.?"
color red "[:=]"
color magenta "\<(if|ifeq|else|endif)\>"
color blue "\$\{.*}"
color brightblue "\w+:"
color green "#.*$"

#white
#black
#red
#blue
#green
#yellow
#magenta
#cyan

#brightwhite
#brightblack
#brightred
#brightblue
#brightgreen
#brightyellow
#brightmagenta
#brightcyan

#white,black
#white,red
#white,blue
#white,green
#white,magenta
#white,cyan

#black,white
#black,red
#black,green
#black,yellow
#black,magenta
#black,cyan

#red,black
#red,white
#red,blue
#red,green
#red,yellow
#red,cyan

#blue,black
#blue,green
#blue,yellow
#blue,red
#blue,cyan

#green,black
#green,white
#green,blue
#green,yellow
#green,magenta
#green,cyan

#yellow,black
#yellow,red
#yellow,blue
#yellow,green
#yellow,magenta
#yellow,cyan

#magenta,white
#magenta,black
#magenta,blue
#magenta,green
#magenta,yellow
#magenta,cyan

#cyan,white
#cyan,black
#cyan,red
#cyan,blue
#cyan,green
#cyan,yellow

#brightwhite
#brightblack
#brightred
#brightblue
#brightgreen
#brightyellow
#brightmagenta
#brightcyan

#brightred,black
#brightred,white
#brightred,blue
#brightred,green
#brightred,yellow
#brightred,cyan

#brightblue,black
#brightblue,green
#brightblue,yellow
#brightblue,red
#brightblue,cyan
#brightgreen,black
#brightgreen,white
#brightgreen,blue
#brightgreen,yellow
#brightgreen,magenta
#brightgreen,cyan

#brightyellow,black
#brightyellow,red
#brightyellow,blue
#brightyellow,green
#brightyellow,magenta
#brightyellow,cyan

#brightmagenta,white
#brightmagenta,black
#brightmagenta,blue
#brightmagenta,green
#brightmagenta,yellow
#brightmagenta,cyan

#brightcyan,white
#brightcyan,black
#brightcyan,red
#brightcyan,blue
#brightcyan,green
#brightcyan,yellow

# Syntax sections

# PHP
# syntax "php" "\.php[2345s~]?$"
# color brightblue "(.*)\("
# color blue "\$[a-zA-Z_0-9$]*|[=!<>]"
# color green "(var|class|function|echo|case|break|default|exit|switch|if|else|elseif|@|while)\s"
# color green "[.,{}();]"
# color red "('.*')|(\".*\")"
# color brightyellow "(#.*|//.*)$"
# color brightyellow start="/\*" end="\*/"
# color brightblue "(<\?(php)?|\?>)"
# color white start="\?>" end="<\?(php)?"

# Alt PHP
syntax "php" "\.php[2345s~]?$"
color brightblue start="<\?(php)?" end="\?>"
color blue start="<[^\?]" end="[^\?]>"
color cyan "\$[a-zA-Z_0-9]*"
color cyan "(\[)|(\])"
color red "(var|class|function|echo|case|break|default|exit|switch|if|else|elseif|@|while)\s"
color red "="
color green "[,{}()]"
color green "=="
color white "('[^']*')|(\"[^"]*\")"
color yellow start="<!--" end="-->"
color yellow start="/\*" end="\*/"
color yellow start="#" end="$"

# Python
syntax "python" "\.py$"
color brightblue "def [a-zA-Z_0-9]+"
color brightcyan  "\<(and|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|map|not|or|pass|print|raise|return|try|while)\>"
color brightgreen "([\"']).*?[^\\]\1"
color brightgreen start="\"\"\"" end="\"\"\""
color brightred "#.*$"

# C
#syntax "c-file" "\.(c|h)$"
#color red "\<[A-Z_]{2,}\>"
#color green "\<(float|double|char|int|short|long|enum|void|static|const|struct|union|typedef|extern|signed|unsigned|inline)\>"
#color brightyellow "\<(for|if|while|do|else|case|switch|goto|continue|break|return)\>"
#color brightcyan "^ *# *(define|undef|include|ifn?def|endif|elif|else|if)"
#color brightmagenta "'([^\]|(\\['abfnrtv\\]))'" "'\\(([0-7][0-7]?)|([0-3][0-7][0-7]))'" "'\\x[0-9A-Fa-f][0-9A-Fa-f]?'"
#color brightyellow "<[^= ]*>" ""(\\.|[^\"])*""
#color brightyellow start=""(\\.|[^\"])*\\ *$" end="^(\\.|[^\"])*""
#color brightblue "//.*"
#color brightblue start="/\*" end="\*/"

# Alt C/C++/h
syntax "c" "\.(c|C|cc|cpp|cxx|h|H|hh|hpp|hxx)$"
color brightred "\<[A-Z_][0-9A-Z_]+\>"
color green "\<(float|double|bool|char|int|short|long|sizeof|enum|void|static|const|struct|union|typedef|extern|signed|unsigned|inline)\>"
color green "\<(u_?)?int(8|16|32|64|ptr)_t\>"
color green "\<(class|namespace|template|public|protected|private|typename|this|friend|virtual|using|mutable|volatile|register|explicit)\>"
color brightyellow "\<(for|if|while|do|else|case|default|switch)\>"
color brightyellow "\<(try|throw|catch|operator|new|delete)\>"
color magenta "\<(goto|continue|break|return)\>"
color brightcyan "^space:*#space:*(define|undef|include|ifn?def|endif|elif|else|if|warning|error)"
color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"

##
## GCC builtins
color cyan "__attribute__space:*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"
##
## String highlighting.  You will in general want your comments and
## strings to come last, because syntax highlighting rules will be
## applied in the order they are read in.
color brightyellow "<[^=        ]*>" ""(\\.|[^"])*""
##
## This string is VERY resource intensive!
color brightyellow start=""(\\.|[^"])*\\space:*$" end="^(\\.|[^"])*""
## Comment highlighting
color brightblue "//.*"
color brightblue start="/\*" end="\*/"

# HTML
syntax "HTML" "\.html$"
color blue start="<" end=">"
color red "&[^; ]*;"

# TeX
syntax "TeX" "\.tex$"
color green "\\.|\\[A-Za-z]*"
color magenta "[{}]"
color blue "%.*"

# Groff
syntax "groff" "\.ms$" "\.mm$" "\.me$" "\.tmac$" "^tmac." ".rof"
color cyan "^\.ds [^ ]*"
color cyan "^\.nr [^ ]*"
color brightmagenta "\\."
color brightmagenta "\\f."
color brightmagenta "\\f\(.."
color brightmagenta "\\s(\+|\-)?[0-9]"
color cyan "(\\|\\\\)n."
color cyan "(\\|\\\\)n\(.."
color cyan start="(\\|\\\\)n\[" end="]"
color brightgreen "^\. *[^ ]*"
color yellow "^\.\\\".*$"
color green "(\\|\\\\)\*."
color green "(\\|\\\\)\*\(.."
color green start="(\\|\\\\)\*\[" end="]"
color brightred "\\\(.."
color brightred start="\\\[" end="]"
color brightcyan "\\\\\$[1-9]"

# Perl
syntax "perl" "\.p[lm]$"
color red "\<(accept|alarm|atan2|bin(d|mode)|c(aller|h(dir|mod|op|own|root)|lose(dir)?|onnect|os|rypt)|d(bm(close|open)|efined|elete|ie|o|ump)|e(ach|of|val|x(ec|ists|it|p))|f(cntl|ileno|lock|ork)|get(c|login|peername|pgrp|ppid|priority|pwnam|(host|net|proto|serv)byname|pwuid|grgid|(host|net)byaddr|protobynumber|servbyport)|([gs]et|end)(pw|gr|host|net|proto|serv)ent|getsock(name|opt)|gmtime|goto|grep|hex|index|int|ioctl|join|keys|kill|last|length|link|listen|local(time)?|log|lstat|m|mkdir|msg(ctl|get|snd|rcv)|next|oct|open(dir)?|ord|pack|pipe|pop|printf?|push|q|qq|qx|rand|re(ad(dir|link)?|cv|do|name|quire|set|turn|verse|winddir)|rindex|rmdir|s|scalar|seek|seekdir|se(lect|mctl|mget|mop|nd|tpgrp|tpriority|tsockopt)|shift|shm(ctl|get|read|write)|shutdown|sin|sleep|socket(pair)?|sort|spli(ce|t)|sprintf|sqrt|srand|stat|study|substr|symlink|sys(call|read|tem|write)|tell(dir)?|time|tr|y|truncate|umask|un(def|link|pack|shift)|utime|values|vec|wait(pid)?|wantarray|warn|write)\>"
color magenta "\<(continue|else|elsif|do|for|foreach|if|unless|until|while|eq|ne|lt|gt|le|ge|cmp|x|my|our|sub|use|package|can|isa)\>"
color cyan start="[$@%]" end="( |\\W|-)"
color yellow ""[^"]*"|qq\|.*\|"
color yellow "'[^']*'"
color white "[sm]/.*/"
color white start="(^use| = new)" end=";"
color green "#.*"
color yellow start="<< 'STOP'" end="STOP"

# Java
syntax "Java source" "\.java$"
color green "\<(boolean|byte|char|double|float|int|long|new|short|this|transient|void)\>"
color red "\<(break|case|catch|continue|default|do|else|finally|for|if|return|switch|throw|try|while)\>"
color cyan "\<(abstract|class|extends|final|implements|import|instanceof|interface|native|package|private|protected|public|static|strictfp|super|synchronized|throws|volatile)\>"
color red ""[^\"]*""
color yellow "\<(true|false|null)\>"
color blue "//.*"
color blue start="/\*" end="\*/"
color brightblue start="/\*\*" end="\*/"
color brightgreen,green " +$"

# Patch
syntax "patch" "\.(patch|diff)$"
color brightgreen "^\+.*"
color green "^\+\+\+.*"
color brightblue "^ .*"
color brightred "^-.*"
color red "^---.*"
color brightyellow "^@@.*"
color magenta "^diff.*"

# Gentoo Ebuilds
syntax "ebuild" "\.ebuild$"
color brightcyan "^ *eclass\>" "^ *inherit\>"
color brightwhite "^ *src [^ ]*"
color brightblue "src_compile\>" "src_unpack\>" "src_install\>" "^ *einfo\>" "$ color yellow "^ *export\>"
color magenta "\<(if|then|fi)\>"
color green "#.*$"

# Makefile
syntax "makefile" "^Makefile\.?"
color red "[:=]"
color magenta "\<(if|ifeq|else|endif)\>"
color blue "\$\{.*}"
color brightblue "\w+:"
color green "#.*$"
