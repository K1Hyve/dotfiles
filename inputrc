# GNU readline .inputrc
#
# Prefix search!  Type "s" then press up -- only search through history that
# started with "s" -- e.g. "ssh", "source", etc.
#
# Since this is .inputrc, this is automatically turned on for many different
# programs: bash, irb, python, mysql, octave, etc etc.  sweet.
#
# For any of these programs, if you configure history to persist across
# sessions, then this becomes a usage search feature.  For example, I type "ss"
# then start pressing up to scroll through all machines I've ssh'd to in the
# last several months.  (C-r reverse search can do this too, but for some
# reason prefix search feels much nicer.)  If I can't remember how to type a
# specific command, I can just prefix search for its beginning, e.g. "ki"
# reveals "kill -9 %1".
#
$include /etc/inputrc
# Standard completion
set completion-query-items 30
# show file types while completing
set visible-stats on

# don't match hidden files when performing tab completion, except when a
# leading '.' is used
set match-hidden-files Off

# never ring the terminal bell
set bell-style none

# hit the <Tab> key ONCE to produce a list of all possible completions
set show-all-if-ambiguous on

# i cant believe this is not default
set blink-matching-paren on

# Get bash filename completion to be case insesitive - see also .bashrc
set completion-ignore-case on

# Allow 8-bit input/output
set meta-flag on
set convert-meta off
set input-meta on
set output-meta on

# Expand homedir name
set expand-tilde on

# Append "/" to all dirnames
set mark-directories on
set mark-symlinked-directories on

#This allows you to search through your history using the up and down arrows â€¦ i.e. type "cd /" and press the up arrow and you'll search through everything in your history that starts with "cd /".
"\e[A": history-search-backward
"\e[B": history-search-forward
"\e[C": forward-char
"\e[D": backward-char

# NOTE:
# Use <C-v><key> to insert quoted key (e.g., <C-v><F1> = *[11~] = \e[11~)
# Use `bind -v` to get current bindings

#"\Control-o": "cat <<-EOF > "
#"\Control-i": menu-complete
#"\e[3~": forward-backward-delete-char

#"\Control-u": universal-argument

# help (F1)
"\e[11~": "man $SHELL\C-m"
# open (F5). Inserts cursor between ""
#"\e[15~": "\"\"\e[D"

"M-l": clear-screen
Meta-k: "dynamic-complete-history"

# Perform alias expansion on the current line.
# Control-s: alias-expand-line
Control-b: "| most"
Meta-a: "\eOD\M-\C-] \eOC"
  # <Left>, back to the last space, <Right>

Meta-e: "\C-] \eOC"
# Forward to the next space, <Right>

Meta-g: "| grep "
Meta-m: "\eb'*\ef*'"
  # word[] -> '*word*'[], for simple words

Meta-;: "<()\eOD"
Meta-=: "$()\eOD"
Meta-]: ">/dev/null"

Meta-0: "/var/log/"

# 'Magic Space'
# Insert a space character then performs
# a history expansion in the line
#Space: magic-space

# follow Sofeng's tips on how to make copy/paste work -myer
Control-v: paste-from-clipboard


# set meta-flag on
# set convert-meta off
# set input-meta on
# set output-meta on

# set bell-style visible
# set editing-mode emacs
# set keymap emacs
# set mark-modified-lines On

# $if Bash
# # Quote the current or previous word
# "\C-xq": "\eb\"\ef\""
# "\C-\M-t": dump-macros
# "\C-u": universal-argument
# "\C-x\C-r": re-read-init-file
# "\C-\M-_": copy-backward-word
# Control-i: menu-complete
# TAB: complete
# $endif

# #"\C-Tab": complete-hostname
# #\C-\M-Tab: menu-complete

# "\e[11~": menu-complete

# "\e[12~": dump-variables 1
# "\e[13~": dump-macros
# "\e[14~": dump-functions

# $if Bash
# # Quote the current or previous word
# "\C-xq": "\eb\"\ef\""
# "\C-xd": "\eb\C-k\C-y \C-y"
# # to exit through calling exit function which will archive the history
# "\C-x\C-x": "exit\n"
# "\C-x\C-w": "archive_history\n"
# $endif

# #"\e[11~": "cd ~/\n"			       #F1
# #"\e[12~": "/home/yoh/bin/draftpaper.sh"        #F2
# #"\e[13~": "cd ~/progr/\n"
# #"\e[14~": "cd ~/rutg/fusion/rfusion/\n"        #F4
# #"\e[15~": "cd ~/rutg/rumba/ \n"		       #F5
# #"\e[17~": "cd ~/progr/matlab/newappr \n"       #F6
# "\e[18~": "cd ~/progr/meg \n"		       #F7
# "\e[19~": "cd ~/rutg/fusion/lp/mosek \n"       #F8
